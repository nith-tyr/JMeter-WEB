<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.6.3">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Test Plan" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.tearDown_on_shutdown">true</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group">
        <intProp name="ThreadGroup.num_threads">1</intProp>
        <intProp name="ThreadGroup.ramp_time">1</intProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller">
          <stringProp name="LoopController.loops">1</stringProp>
          <boolProp name="LoopController.continue_forever">false</boolProp>
        </elementProp>
      </ThreadGroup>
      <hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Transaction Controller">
          <boolProp name="TransactionController.parent">true</boolProp>
          <boolProp name="TransactionController.includeTimers">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="IGS India">
            <stringProp name="HTTPSampler.domain">igsglobal.com</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="c_ResponseCode">
              <stringProp name="RegexExtractor.useHeaders">code</stringProp>
              <stringProp name="RegexExtractor.refname">c_ResponseCode</stringProp>
              <stringProp name="RegexExtractor.regex">(\d+)</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">c_ResponseCode_NotFound</stringProp>
              <stringProp name="RegexExtractor.match_number"></stringProp>
              <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
            </RegexExtractor>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="1736571043">302|301</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">1</intProp>
            </ResponseAssertion>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Text" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1236901591">Enterprise-scale Quality Engineering Solutions â€“ IGS India</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">48</intProp>
              <stringProp name="Scope.variable"></stringProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
          <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller">
            <stringProp name="TestPlan.comments">&quot;{c_ResponseCode}&quot; != &quot;c_ResponseCode_NotFound&quot;
${__jexl3(&quot;${JmeterThread.last_sample_ok} == &quot;true&quot;,)}
&apos;${c_ResponseCode} == 200&apos;
${JMeterThread.last_sample_ok}=false

Passed 
${__jexl3(${c_ResponseCode} == 200)}

</stringProp>
            <stringProp name="IfController.condition">${__jexl3(${c_ResponseCode} &gt; 200)}</stringProp>
            <boolProp name="IfController.evaluateAll">false</boolProp>
            <boolProp name="IfController.useExpression">true</boolProp>
          </IfController>
          <hashTree>
            <SmtpSampler guiclass="SmtpSamplerGui" testclass="SmtpSampler" testname="SMTP Sampler">
              <stringProp name="SMTPSampler.server">smtp.office365.com</stringProp>
              <stringProp name="SMTPSampler.serverPort">587</stringProp>
              <stringProp name="SMTPSampler.mailFrom">nitheesh.bp@igsindia.net</stringProp>
              <stringProp name="SMTPSampler.replyTo"></stringProp>
              <stringProp name="SMTPSampler.receiverTo">nitheesh.bp@igsindia.net</stringProp>
              <stringProp name="SMTPSampler.receiverCC"></stringProp>
              <stringProp name="SMTPSampler.receiverBCC"></stringProp>
              <stringProp name="SMTPSampler.subject">IGS India Website Monitoring</stringProp>
              <stringProp name="SMTPSampler.suppressSubject">false</stringProp>
              <stringProp name="SMTPSampler.include_timestamp">true</stringProp>
              <stringProp name="SMTPSampler.message">The igsglobal.com website is down ${__time(dd-MM-yyyy  &apos;T&apos;  hh:mm:ss a,)}</stringProp>
              <stringProp name="SMTPSampler.plainBody">false</stringProp>
              <stringProp name="SMTPSampler.attachFile"></stringProp>
              <stringProp name="SMTPSampler.useSSL">false</stringProp>
              <stringProp name="SMTPSampler.useStartTLS">true</stringProp>
              <stringProp name="SMTPSampler.trustAllCerts">false</stringProp>
              <stringProp name="SMTPSampler.enforceStartTLS">false</stringProp>
              <stringProp name="SMTPSampler.useLocalTrustStore">false</stringProp>
              <stringProp name="SMTPSampler.trustStoreToUse"></stringProp>
              <stringProp name="SMTPSampler.tlsProtocols"></stringProp>
              <boolProp name="SMTPSampler.use_eml">false</boolProp>
              <stringProp name="SMTPSampler.emlMessageToSend"></stringProp>
              <stringProp name="SMTPSampler.useAuth">true</stringProp>
              <stringProp name="SMTPSampler.password">Wardog@1</stringProp>
              <stringProp name="SMTPSampler.username">nitheesh.bp@igsindia.net</stringProp>
              <stringProp name="SMTPSampler.messageSizeStatistics">false</stringProp>
              <stringProp name="SMTPSampler.enableDebug">false</stringProp>
              <collectionProp name="SMTPSampler.headerFields"/>
            </SmtpSampler>
            <hashTree/>
          </hashTree>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="false">
          <boolProp name="displayJMeterProperties">false</boolProp>
          <boolProp name="displayJMeterVariables">true</boolProp>
          <boolProp name="displaySystemProperties">false</boolProp>
        </DebugSampler>
        <hashTree/>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
